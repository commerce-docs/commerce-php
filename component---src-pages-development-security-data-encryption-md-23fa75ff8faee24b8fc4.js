"use strict";(self.webpackChunkcommerce_php=self.webpackChunkcommerce_php||[]).push([[41716],{88638:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return i},default:function(){return y}});var r=t(58168),a=t(80045),o=(t(88763),t(15680)),m=t(83407),p=t(64139);const c=["components"],i={},l={_frontmatter:i},s=m.A;function y(e){let{components:n}=e,t=(0,a.A)(e,c);return(0,o.mdx)(s,(0,r.A)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"data-re-encryption"},"Data re-encryption"),(0,o.mdx)(p.A,{mdxType:"BetaNote"}),(0,o.mdx)("p",null,"Adobe Commerce and Magento Open Source provide functionality to re-encrypt certain encrypted system configuration, payment fields, and custom fields. These operations may be necessary after ",(0,o.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/en/docs/commerce-admin/systems/security/encryption-key"},"rotating an encryption key"),"."),(0,o.mdx)("h1",{id:"default-re-encryptors"},"Default re-encryptors"),(0,o.mdx)("p",null,"The default re-encryption configuration provides two re-encryptors:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"System configuration fields"),"—",(0,o.mdx)("inlineCode",{parentName:"li"},"Magento\\Config\\Model\\Data\\ReEncryptorList\\CoreConfigDataReEncryptor")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"Payment fields"),"—",(0,o.mdx)("inlineCode",{parentName:"li"},"Magento\\Sales\\Model\\Data\\ReEncryptorList\\SalesOrderPaymentReEncryptor"))),(0,o.mdx)("p",null,"You can use the following command to run both re-encryptors after rotating an encryption key."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"bin/magento encryption:data:re-encrypt core_config_data sales_order_payment\n")),(0,o.mdx)("h1",{id:"re-encrypting-specific-table-columns"},"Re-encrypting specific table columns"),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"Magento\\EncryptionKey\\Model\\Data\\ReEncryptorList\\ReEncryptor\\SimpleHandler")," class serves as a base for re-encryptors that simply tries to re-encrypt specific columns in a database table."),(0,o.mdx)("p",null,"Follow these steps to re-encrypt specific columns in your tables and add a custom re-encryptor:"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Create a virtual type handler for the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Magento\\EncryptionKey\\Model\\Data\\ReEncryptorList\\ReEncryptor\\SimpleHandler")," class and provide the table name, primary key, and columns to encrypt as constructor arguments."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-xml"},'<virtualType name="Vendor\\MyModule\\Model\\Data\\ReEncryptorList\\MyCustomPaymentEncryptor\\Handler" type="Magento\\EncryptionKey\\Model\\Data\\ReEncryptorList\\ReEncryptor\\SimpleHandler">\n    <arguments>\n        <argument name="tableName" xsi:type="string">my_custom_payment_table</argument>\n        <argument name="identifierField" xsi:type="string">entity_id</argument>\n        <argument name="fieldsToReEncrypt" xsi:type="array">\n            <item name="cc_number_enc" xsi:type="string">cc_number_enc</item>\n        </argument>\n    </arguments>\n</virtualType>\n'))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Create a virtual type for the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Magento\\EncryptionKey\\Model\\Data\\ReEncryptorList\\ReEncryptor")," class and inject the handler created in the previous step as a constructor argument."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-xml"},'<virtualType name="Vendor\\MyModule\\Model\\Data\\ReEncryptorList\\MyCustomPaymentReEncryptor" type="Magento\\EncryptionKey\\Model\\Data\\ReEncryptorList\\ReEncryptor">\n    <arguments>\n        <argument name="description" xsi:type="string">Re-encrypts \'cc_number_enc\' column in the \'my_custom_payment_table\' DB table.</argument>\n        <argument name="handler" xsi:type="object">Vendor\\MyModule\\Model\\Data\\ReEncryptorList\\MyCustomPaymentEncryptor\\Handler</argument>\n    </arguments>\n</virtualType>\n'))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Add the re-encryptor that you created in the previous step to the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Magento\\EncryptionKey\\Model\\Data\\ReEncryptorList")," class."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-xml"},'<type name="Magento\\EncryptionKey\\Model\\Data\\ReEncryptorList">\n    <arguments>\n        <argument name="reEncryptors" xsi:type="array">\n            <item name="my_custom_payment_reencryptor" xsi:type="object">Vendor\\MyModule\\Model\\Data\\ReEncryptorList\\MyCustomPaymentReEncryptor</item>\n        </argument>\n    </arguments>\n</type>\n')))),(0,o.mdx)("p",null,"You can run the following command to test that the newly created re-encryptor shows up in the list of available encryptors and whether there were any errors."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"bin/magento encryption:data:list-re-encryptors\n")),(0,o.mdx)("p",null,"If the previous step was successful, you can run the following command to re-encrypt specific columns in your database table using the re-encryptor."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"bin/magento encryption:data:re-encrypt my_custom_payment_reencryptor\n")))}y.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-development-security-data-encryption-md-23fa75ff8faee24b8fc4.js.map