{"version":3,"file":"component---src-pages-development-security-data-encryption-md-23fa75ff8faee24b8fc4.js","mappings":"gSASaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAI5E,eACE,GAAM,sBACH,uBACL,SAAC,IAAD,CAAUA,QAAQ,cAClB,kBAAK,kMAAgM,cAAGC,WAAW,IAC/M,KAAQ,6FACL,8BAAkC,MACzC,eACE,GAAM,yBACH,0BACL,kBAAK,wEACL,oBACE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAO,+BAAwC,KAAG,uBAAYA,WAAW,MAAO,8EACvH,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAO,kBAA2B,KAAG,uBAAYA,WAAW,MAAO,iFAE5G,kBAAK,kGACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,mFAEP,eACE,GAAM,wCACH,yCACL,kBAAK,QAAM,uBAAYA,WAAW,KAAM,oFAAiG,oHACzI,kBAAK,oGACL,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,0CAAwC,uBAAYA,WAAW,KAAM,oFAAiG,qGAC3L,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBACV,skBAWT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,kCAAgC,uBAAYA,WAAW,KAAM,qEAAkF,0FACpK,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBACV,0gBAQT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,sEAAoE,uBAAYA,WAAW,KAAM,wDAAqE,YAC3L,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBACV,kWAUX,kBAAK,kKACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,sDAEP,kBAAK,yJACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,2EAIV,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/development/security/data-encryption.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport BetaNote from '/src/_includes/notes/beta.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"data-re-encryption\"\n    }}>{`Data re-encryption`}</h1>\n    <BetaNote mdxType=\"BetaNote\" />\n    <p>{`Adobe Commerce and Magento Open Source provide functionality to re-encrypt certain encrypted system configuration, payment fields, and custom fields. These operations may be necessary after `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/en/docs/commerce-admin/systems/security/encryption-key\"\n      }}>{`rotating an encryption key`}</a>{`.`}</p>\n    <h1 {...{\n      \"id\": \"default-re-encryptors\"\n    }}>{`Default re-encryptors`}</h1>\n    <p>{`The default re-encryption configuration provides two re-encryptors:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`System configuration fields`}</strong>{`—`}<inlineCode parentName=\"li\">{`Magento\\\\Config\\\\Model\\\\Data\\\\ReEncryptorList\\\\CoreConfigDataReEncryptor`}</inlineCode></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Payment fields`}</strong>{`—`}<inlineCode parentName=\"li\">{`Magento\\\\Sales\\\\Model\\\\Data\\\\ReEncryptorList\\\\SalesOrderPaymentReEncryptor`}</inlineCode></li>\n    </ul>\n    <p>{`You can use the following command to run both re-encryptors after rotating an encryption key.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento encryption:data:re-encrypt core_config_data sales_order_payment\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"re-encrypting-specific-table-columns\"\n    }}>{`Re-encrypting specific table columns`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Magento\\\\EncryptionKey\\\\Model\\\\Data\\\\ReEncryptorList\\\\ReEncryptor\\\\SimpleHandler`}</inlineCode>{` class serves as a base for re-encryptors that simply tries to re-encrypt specific columns in a database table.`}</p>\n    <p>{`Follow these steps to re-encrypt specific columns in your tables and add a custom re-encryptor:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a virtual type handler for the `}<inlineCode parentName=\"p\">{`Magento\\\\EncryptionKey\\\\Model\\\\Data\\\\ReEncryptorList\\\\ReEncryptor\\\\SimpleHandler`}</inlineCode>{` class and provide the table name, primary key, and columns to encrypt as constructor arguments.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<virtualType name=\"Vendor\\\\MyModule\\\\Model\\\\Data\\\\ReEncryptorList\\\\MyCustomPaymentEncryptor\\\\Handler\" type=\"Magento\\\\EncryptionKey\\\\Model\\\\Data\\\\ReEncryptorList\\\\ReEncryptor\\\\SimpleHandler\">\n    <arguments>\n        <argument name=\"tableName\" xsi:type=\"string\">my_custom_payment_table</argument>\n        <argument name=\"identifierField\" xsi:type=\"string\">entity_id</argument>\n        <argument name=\"fieldsToReEncrypt\" xsi:type=\"array\">\n            <item name=\"cc_number_enc\" xsi:type=\"string\">cc_number_enc</item>\n        </argument>\n    </arguments>\n</virtualType>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a virtual type for the `}<inlineCode parentName=\"p\">{`Magento\\\\EncryptionKey\\\\Model\\\\Data\\\\ReEncryptorList\\\\ReEncryptor`}</inlineCode>{` class and inject the handler created in the previous step as a constructor argument.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<virtualType name=\"Vendor\\\\MyModule\\\\Model\\\\Data\\\\ReEncryptorList\\\\MyCustomPaymentReEncryptor\" type=\"Magento\\\\EncryptionKey\\\\Model\\\\Data\\\\ReEncryptorList\\\\ReEncryptor\">\n    <arguments>\n        <argument name=\"description\" xsi:type=\"string\">Re-encrypts 'cc_number_enc' column in the 'my_custom_payment_table' DB table.</argument>\n        <argument name=\"handler\" xsi:type=\"object\">Vendor\\\\MyModule\\\\Model\\\\Data\\\\ReEncryptorList\\\\MyCustomPaymentEncryptor\\\\Handler</argument>\n    </arguments>\n</virtualType>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the re-encryptor that you created in the previous step to the `}<inlineCode parentName=\"p\">{`Magento\\\\EncryptionKey\\\\Model\\\\Data\\\\ReEncryptorList`}</inlineCode>{` class.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<type name=\"Magento\\\\EncryptionKey\\\\Model\\\\Data\\\\ReEncryptorList\">\n    <arguments>\n        <argument name=\"reEncryptors\" xsi:type=\"array\">\n            <item name=\"my_custom_payment_reencryptor\" xsi:type=\"object\">Vendor\\\\MyModule\\\\Model\\\\Data\\\\ReEncryptorList\\\\MyCustomPaymentReEncryptor</item>\n        </argument>\n    </arguments>\n</type>\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`You can run the following command to test that the newly created re-encryptor shows up in the list of available encryptors and whether there were any errors.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento encryption:data:list-re-encryptors\n`}</code></pre>\n    <p>{`If the previous step was successful, you can run the following command to re-encrypt specific columns in your database table using the re-encryptor.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento encryption:data:re-encrypt my_custom_payment_reencryptor\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}